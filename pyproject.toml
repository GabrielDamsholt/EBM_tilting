[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
authors = [
  {name = "Gabriel Damsholt", email = "gabriel@damsholt.dk"},
]
name = "ebm_tilting"
version = "0.0.1"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "mypy",
    "torch",
    "torchvision",
    "ema_pytorch",
    "torchdiffeq",
    "torchsde",
    "matplotlib",
    "numpy",
    "tqdm",
    "jaxtyping",
]

[project.scripts]
train = "ebm_tilting.scripts.train:main"
train_finetune = "ebm_tilting.scripts.train_finetune:main"
generate = "ebm_tilting.scripts.sample:main"
generate_finetune = "ebm_tilting.scripts.sample_finetune:main"
interpolate = "ebm_tilting.scripts.interpolate:main"
compute_mnist_mean = "ebm_tilting.scripts.compute_mnist_mean:main"

[tool.setuptools.packages.find]
where = ["."]
namespaces = false

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py313"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".gitignore",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "__pycache__",
    "README.md",
]

[tool.ruff.lint]
select = ["C", "E", "F", "W", "B", "B9"]
ignore = ["E203", "E501", "F722"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
disallow_untyped_defs = false
strict = false

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".gitignore",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "__pycache__",
    "README.md",
]

[[tool.mypy.overrides]]
module = [
    "torchvision.*",
    "ema_pytorch",
    "torchdiffeq",
    "torchsde"
]
ignore_missing_imports = true
